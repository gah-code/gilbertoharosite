{"version":3,"file":"component---src-templates-blog-category-js-4dd5db2d4fd57928e030.js","mappings":"iNAGO,MAAMA,EAAgBC,GACtBA,EACEA,EAAIC,QAAQ,MAAO,IADT,GAIJ,SAASC,EAAOC,GAAsC,IAArC,MAAEC,EAAK,YAAEC,EAAW,MAAEC,EAAK,IAAEN,GAAKG,EAChE,MAAMI,EAAaR,EAAaC,GAChC,OACEQ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMC,QAAQ,UACdD,EAAAA,cAAA,QAAME,KAAK,WAAWC,QAAQ,0CAC9BH,EAAAA,cAAA,QAAME,KAAK,SAASC,QAAQ,kBAE5BH,EAAAA,cAAA,aAAQJ,GACRI,EAAAA,cAAA,QAAME,KAAK,cAAcC,QAASN,GAAe,wBAEhDE,GAAcC,EAAAA,cAAA,QAAMI,IAAI,YAAYC,KAAMN,IAC3CC,EAAAA,cAAA,QAAMM,SAAS,WAAWH,QAASP,IACnCI,EAAAA,cAAA,QACEM,SAAS,iBACTH,QAASN,GAAe,wBAE1BG,EAAAA,cAAA,QAAMM,SAAS,SAASH,QAASJ,IAChCD,GAASE,EAAAA,cAAA,QAAMM,SAAS,WAAWH,QAASL,EAAMN,MAGzD,C,yFCZA,MAbeG,IAAmB,IAAlB,SAAEY,GAAUZ,EAI1B,OACEK,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACQ,EAAAA,MAAK,CAACC,MAAM,WACbT,EAAAA,cAAA,YAAOO,GACPP,EAAAA,cAACQ,EAAAA,MAAK,CAACC,MAAM,WACZ,C,uECgEP,UAvE6Bd,IAA4B,IAA3B,KAAEe,EAAI,YAAEC,GAAahB,EACjD,MAAM,SAAEiB,EAAQ,YAAEC,EAAW,SAAEC,GAAaH,EACtCI,EAAQL,EAAKM,sBAAsBC,MAGnCC,EAAW,aAAaN,EAASO,gBACjCC,EACJP,GAAe,EAAIK,EAAW,GAAGA,KAAYL,EAAc,IACvDQ,EAAW,GAAGH,KAAYL,EAAc,IAE9C,OACEb,EAAAA,cAACsB,EAAAA,EAAM,KACLtB,EAAAA,cAAA,UAAI,aAAWY,GAEfZ,EAAAA,cAAA,UACGe,EAAMQ,KAAKC,GACVxB,EAAAA,cAAA,MAAIyB,IAAKD,EAAKE,GAAIC,MAAO,CAAEC,aAAc,SACvC5B,EAAAA,cAAC6B,EAAAA,KAAI,CAACC,GAAI,UAAUN,EAAKO,QACvB/B,EAAAA,cAAA,UAAKwB,EAAK5B,QAEZI,EAAAA,cAAA,SAAIwB,EAAKQ,SACThC,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAAQ,SAAc,IAAEwB,EAAKS,MAE/BjC,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAAQ,aAAmB,IAC3BA,EAAAA,cAAC6B,EAAAA,KAAI,CAACC,GAAI,aAAaN,EAAKZ,SAASO,iBAClCK,EAAKZ,eAQhBZ,EAAAA,cAAA,OAAK2B,MAAO,CAAEO,UAAW,SACtBrB,EAAc,GAAKb,EAAAA,cAAC6B,EAAAA,KAAI,CAACC,GAAIV,GAAU,mBACvCP,EAAcC,GACbd,EAAAA,cAAC6B,EAAAA,KAAI,CAACC,GAAIT,EAAUM,MAAO,CAAEQ,WAAY,SAAU,gBAMvDnC,EAAAA,cAAC6B,EAAAA,KAAI,CAACC,GAAG,SAASH,MAAO,CAAES,QAAS,QAASF,UAAW,SAAU,qBAG3D,C","sources":["webpack://gilbert-contentful-website/./src/components/head.js","webpack://gilbert-contentful-website/./src/components/layout/layout.js","webpack://gilbert-contentful-website/./src/templates/blog-category.js"],"sourcesContent":["import React from \"react\"\n\n// Utility function to remove trailing slashes\nexport const normalizeUrl = (url) => {\n  if (!url) return \"\"\n  return url.replace(/\\/$/, \"\") // Remove trailing slash\n}\n\nexport default function SEOHead({ title, description, image, url }) {\n  const cleanedUrl = normalizeUrl(url)\n  return (\n    <>\n      <meta charSet=\"utf-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <meta name=\"robots\" content=\"index, follow\" />\n\n      <title>{title}</title>\n      <meta name=\"description\" content={description || \"Default description\"} />\n\n      {cleanedUrl && <link rel=\"canonical\" href={cleanedUrl} />}\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:description\"\n        content={description || \"Default description\"}\n      />\n      <meta property=\"og:url\" content={cleanedUrl} />\n      {image && <meta property=\"og:image\" content={image.url} />}\n    </>\n  )\n}\n","import * as React from \"react\"\nimport styles from \"../design-system/styles.css\"\nimport { Slice } from \"gatsby\"\n\nconst Layout = ({ children }) => {\n  // console.log(\"Rendering Header Slice\")\n  // console.log(\"Rendering Footer Slice\")\n\n  return (\n    <>\n      <Slice alias=\"header\" />\n      <main>{children}</main>\n      <Slice alias=\"footer\" />\n    </>\n  )\n}\n\nexport default Layout\n","// src/templates/blog-category.js\nimport React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout/layout\"\nimport SEOHead, { normalizeUrl } from \"../components/head\"\n\nconst BlogCategoryTemplate = ({ data, pageContext }) => {\n  const { category, currentPage, numPages } = pageContext\n  const posts = data.allContentfulBlogPost.nodes\n\n  // Build dynamic “Previous” & “Next” page links\n  const basePath = `/category/${category.toLowerCase()}`\n  const prevPage =\n    currentPage <= 2 ? basePath : `${basePath}/${currentPage - 1}`\n  const nextPage = `${basePath}/${currentPage + 1}`\n\n  return (\n    <Layout>\n      <h1>Category: {category}</h1>\n\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id} style={{ marginBottom: \"1rem\" }}>\n            <Link to={`/blogs/${post.slug}`}>\n              <h2>{post.title}</h2>\n            </Link>\n            <p>{post.excerpt}</p>\n            <p>\n              <strong>Date:</strong> {post.date}\n            </p>\n            <p>\n              <strong>Category:</strong>{\" \"}\n              <Link to={`/category/${post.category.toLowerCase()}`}>\n                {post.category}\n              </Link>\n            </p>\n          </li>\n        ))}\n      </ul>\n\n      {/* Pagination Links */}\n      <div style={{ marginTop: \"2rem\" }}>\n        {currentPage > 1 && <Link to={prevPage}>&laquo; Previous Page</Link>}\n        {currentPage < numPages && (\n          <Link to={nextPage} style={{ marginLeft: \"1rem\" }}>\n            Next Page &raquo;\n          </Link>\n        )}\n      </div>\n\n      <Link to=\"/blogs\" style={{ display: \"block\", marginTop: \"2rem\" }}>\n        Back to All Posts\n      </Link>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ($category: String!, $limit: Int!, $skip: Int!) {\n    allContentfulBlogPost(\n      filter: { category: { eq: $category } }\n      sort: { fields: date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        title\n        slug\n        id\n\n        date(formatString: \"MMMM DD, YYYY\")\n        category\n      }\n    }\n  }\n`\n\nexport default BlogCategoryTemplate\n"],"names":["normalizeUrl","url","replace","SEOHead","_ref","title","description","image","cleanedUrl","React","charSet","name","content","rel","href","property","children","Slice","alias","data","pageContext","category","currentPage","numPages","posts","allContentfulBlogPost","nodes","basePath","toLowerCase","prevPage","nextPage","Layout","map","post","key","id","style","marginBottom","Link","to","slug","excerpt","date","marginTop","marginLeft","display"],"sourceRoot":""}