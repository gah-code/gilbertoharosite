{"version":3,"file":"component---src-pages-page-slug-js-67fe8d9c0a7845bfd865.js","mappings":"kNAGO,MAAMA,EAAgBC,GACtBA,EACEA,EAAIC,QAAQ,MAAO,IADT,GAIJ,SAASC,EAAOC,GAAsC,IAArC,MAAEC,EAAK,YAAEC,EAAW,MAAEC,EAAK,IAAEN,GAAKG,EAChE,MAAMI,EAAaR,EAAaC,GAChC,OACEQ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMC,QAAQ,UACdD,EAAAA,cAAA,QAAME,KAAK,WAAWC,QAAQ,0CAC9BH,EAAAA,cAAA,QAAME,KAAK,SAASC,QAAQ,kBAE5BH,EAAAA,cAAA,aAAQJ,GACRI,EAAAA,cAAA,QAAME,KAAK,cAAcC,QAASN,GAAe,wBAEhDE,GAAcC,EAAAA,cAAA,QAAMI,IAAI,YAAYC,KAAMN,IAC3CC,EAAAA,cAAA,QAAMM,SAAS,WAAWH,QAASP,IACnCI,EAAAA,cAAA,QACEM,SAAS,iBACTH,QAASN,GAAe,wBAE1BG,EAAAA,cAAA,QAAMM,SAAS,SAASH,QAASJ,IAChCD,GAASE,EAAAA,cAAA,QAAMM,SAAS,WAAWH,QAASL,EAAMN,MAGzD,C,yFCZA,MAbeG,IAAmB,IAAlB,SAAEY,GAAUZ,EAI1B,OAHAa,QAAQC,IAAI,0BACZD,QAAQC,IAAI,0BAGVT,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACU,EAAAA,MAAK,CAACC,MAAM,WACbX,EAAAA,cAAA,YAAOO,GACPP,EAAAA,cAACU,EAAAA,MAAK,CAACC,MAAM,WACZ,C,0ICPQ,SAASC,EAAKC,GAC3B,MAAM,KAAEC,GAASD,EAAME,KAEvB,OACEf,EAAAA,cAACgB,EAAAA,EAAM,KACLhB,EAAAA,cAACiB,EAAAA,GAAG,CAACC,SAAU,GACblB,EAAAA,cAACmB,EAAAA,GAAS,CAACC,MAAM,UACfpB,EAAAA,cAACqB,EAAAA,GAAO,CAACC,GAAG,MAAMR,EAAKlB,OACvBI,EAAAA,cAAA,OACEuB,wBAAyB,CACvBC,OAAQV,EAAKW,UAO3B,CACO,MAAMC,EAAQb,IACnB,MAAM,KAAEC,EAAI,KAAEa,EAAI,eAAEC,GAAmBf,EAAME,KACvCc,EAAeF,EAAKE,aAEpBjC,GAAQgC,aAAc,EAAdA,EAAgBE,WAAYhB,EAAKlB,OAASiC,EAAajC,MAG/DJ,GAAMD,EAAAA,EAAAA,GAAa,GAAGsC,EAAaE,WAAWjB,EAAKkB,QAIzD,OAFAxB,QAAQC,IAAII,GAGVb,EAAAA,cAACN,EAAAA,EAAO,CACNE,MAAOA,EACPC,YAAaiB,EAAKjB,aAAegC,EAAahC,YAC9CC,MAAOgB,EAAKhB,OAAS,KACrBN,IAAKA,GACL,C","sources":["webpack://gilbert-contentful-website/./src/components/head.js","webpack://gilbert-contentful-website/./src/components/layout/layout.js","webpack://gilbert-contentful-website/./src/pages/{Page.slug}.js"],"sourcesContent":["import React from \"react\"\n\n// Utility function to remove trailing slashes\nexport const normalizeUrl = (url) => {\n  if (!url) return \"\"\n  return url.replace(/\\/$/, \"\") // Remove trailing slash\n}\n\nexport default function SEOHead({ title, description, image, url }) {\n  const cleanedUrl = normalizeUrl(url)\n  return (\n    <>\n      <meta charSet=\"utf-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <meta name=\"robots\" content=\"index, follow\" />\n\n      <title>{title}</title>\n      <meta name=\"description\" content={description || \"Default description\"} />\n\n      {cleanedUrl && <link rel=\"canonical\" href={cleanedUrl} />}\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:description\"\n        content={description || \"Default description\"}\n      />\n      <meta property=\"og:url\" content={cleanedUrl} />\n      {image && <meta property=\"og:image\" content={image.url} />}\n    </>\n  )\n}\n","import * as React from \"react\"\nimport \"../design-system/styles.css\"\nimport { Slice } from \"gatsby\"\n\nconst Layout = ({ children }) => {\n  console.log(\"Rendering Header Slice\")\n  console.log(\"Rendering Footer Slice\")\n\n  return (\n    <>\n      <Slice alias=\"header\" />\n      <main>{children}</main>\n      <Slice alias=\"footer\" />\n    </>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout/layout\"\nimport { Container, Box, Heading } from \"../components/ui/ui\"\nimport SEOHead, { normalizeUrl } from \"../components/head\"\n\nexport default function Page(props) {\n  const { page } = props.data\n\n  return (\n    <Layout>\n      <Box paddingY={5}>\n        <Container width=\"narrow\">\n          <Heading as=\"h1\">{page.title}</Heading>\n          <div\n            dangerouslySetInnerHTML={{\n              __html: page.html,\n            }}\n          />\n        </Container>\n      </Box>\n    </Layout>\n  )\n}\nexport const Head = (props) => {\n  const { page, site, contentfulPage } = props.data\n  const siteMetadata = site.siteMetadata\n\n  const title = contentfulPage?.seoTitle || page.title || siteMetadata.title\n\n  // const url = `${siteMetadata.siteUrl}/${page.slug}`\n  const url = normalizeUrl(`${siteMetadata.siteUrl}/${page.slug}`)\n\n  console.log(props)\n\n  return (\n    <SEOHead\n      title={title}\n      description={page.description || siteMetadata.description}\n      image={page.image || null}\n      url={url}\n    />\n  )\n}\n\nexport const query = graphql`\n  query PageContent($id: String!) {\n    site {\n      siteMetadata {\n        siteUrl\n        title\n        description\n      }\n    }\n    contentfulPage(id: { eq: $id }) {\n      seoTitle\n    }\n    page(id: { eq: $id }) {\n      id\n      title\n      slug\n      description\n      image {\n        id\n        url\n      }\n      html\n    }\n  }\n`\n"],"names":["normalizeUrl","url","replace","SEOHead","_ref","title","description","image","cleanedUrl","React","charSet","name","content","rel","href","property","children","console","log","Slice","alias","Page","props","page","data","Layout","Box","paddingY","Container","width","Heading","as","dangerouslySetInnerHTML","__html","html","Head","site","contentfulPage","siteMetadata","seoTitle","siteUrl","slug"],"sourceRoot":""}