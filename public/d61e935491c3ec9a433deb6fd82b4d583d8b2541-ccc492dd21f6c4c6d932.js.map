{"version":3,"file":"d61e935491c3ec9a433deb6fd82b4d583d8b2541-ccc492dd21f6c4c6d932.js","mappings":"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","sources":["webpack://gilbert-contentful-website/./src/components/ui/ui.css.ts","webpack://gilbert-contentful-website/./node_modules/camelcase/index.js","webpack://gilbert-contentful-website/../src/image-utils.ts","webpack://gilbert-contentful-website/../src/components/hooks.ts","webpack://gilbert-contentful-website/../src/components/layout-wrapper.tsx","webpack://gilbert-contentful-website/../src/components/picture.tsx","webpack://gilbert-contentful-website/../src/components/placeholder.tsx","webpack://gilbert-contentful-website/../src/components/main-image.tsx","webpack://gilbert-contentful-website/../src/components/gatsby-image.server.tsx","webpack://gilbert-contentful-website/../src/components/gatsby-image.browser.tsx","webpack://gilbert-contentful-website/../src/components/static-image.server.tsx","webpack://gilbert-contentful-website/../src/components/static-image.tsx","webpack://gilbert-contentful-website/./node_modules/is-absolute-url/index.js","webpack://gilbert-contentful-website/./src/components/ui/ui.js"],"sourcesContent":["import \"src/components/design-system/theme.css.ts.vanilla.css!=!../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/design-system/theme.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#H4sIAAAAAAAAE43Ty27bMBAF0H2+4iLamgZfet2sAqTZedUvkG06cWpLjpW2bov+e0EVKDSjTbUSDmeGFGfE6zB84NcdYMxtfO/TyRLFfn8IKT7M1BGFfwwxtHP1RGFt9E0910AUwUUfhEaiSGFbVjXmXE4l7JyqiULwu7nWhBFhDREvt7m0RCOlI1wlaUsEL2lHVKrUnnBeFUuEUWEHwqioF8LoPV8Jozc9Ekbv+pZz9bZf8lEknQinUs/LL+0Jp2oNhFeJl+V9vBNRJV6XVzQSUTbugyilfCUqKd+IWsp3opFyI+6fNvjc9eP9CmPXj2ZM1+NhHvPjP2J+Ek8bbIZ+WGGT+tOwwnnoh/HS7ZIYbku4dVUKc9m8NJ/NCQqEhEiIj3FlHty19eksuCLs2jZK62nurLxp1xDO6sa5Nk9B1LEd0ejuue2yo25HBKuz91NTFabliLhDzlb2ko+p7HU5ce5ItPlR/EbYyy3/1Pk3nt4L/8m3IdjH1b+lXG2+5uLftUasxTo8x2ffPtz9/gNZ49DJ4wQAAA==\\\"}!../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/components/ui/ui.css.ts.vanilla.css!=!../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/ui/ui.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#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\\\"}!../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var avatar = '_4rutkr5h';\nexport var backgrounds = {primary:'_4rutkr5e',muted:'_4rutkr5f'};\nexport var blockLink = '_4rutkr58';\nexport var blockquote = '_4rutkr5g';\nexport var box = {center:'_4rutkr2o'};\nexport var buttons = {primary:'_4rutkr5a _4rutkr59',reversed:'_4rutkr5b _4rutkr59',link:'_4rutkr5c _4rutkr59',linkReversed:'_4rutkr5d _4rutkr59'};\nexport var codeBlock = '_4rutkr5r';\nexport var container = '_4rutkr0';\nexport var containers = {normal:'_4rutkr0',wide:'_4rutkr2 _4rutkr0',narrow:'_4rutkr3 _4rutkr0',tight:'_4rutkr4 _4rutkr0',fullbleed:'_4rutkr5 _4rutkr0'};\nexport var ctaLink = '_4rutkr57';\nexport var debug = '_4rutkr5q';\nexport var flex = '_4rutkr6';\nexport var flexGap = {'0':'_4rutkrh','1':'_4rutkri','2':'_4rutkrj','3':'_4rutkrk','4':'_4rutkrl','5':'_4rutkrm','6':'_4rutkrn','-1':'_4rutkro','-2':'_4rutkrp','-3':'_4rutkrq','-4':'_4rutkrr','-5':'_4rutkrs','-6':'_4rutkrt'};\nexport var flexVariants = {wrap:'_4rutkr7',start:'_4rutkr8',baseline:'_4rutkr9',columnStart:'_4rutkra',column:'_4rutkrb',end:'_4rutkrc',stretch:'_4rutkrd',spaceBetween:'_4rutkre',center:'_4rutkrf',responsive:'_4rutkrg'};\nexport var gutter = {'0':'_4rutkr24','1':'_4rutkr25','2':'_4rutkr26','3':'_4rutkr27','4':'_4rutkr28','5':'_4rutkr29','6':'_4rutkr2a','-1':'_4rutkr2b','-2':'_4rutkr2c','-3':'_4rutkr2d','-4':'_4rutkr2e','-5':'_4rutkr2f','-6':'_4rutkr2g'};\nexport var iconLink = '_4rutkr5n';\nexport var icons = {small:'_4rutkr5k',medium:'_4rutkr5l',large:'_4rutkr5m'};\nexport var inlineCode = '_4rutkr5s';\nexport var interactiveIcon = '_4rutkr5o';\nexport var link = '_4rutkr54';\nexport var list = '_4rutkr10';\nexport var logos = {small:'_4rutkr5i',medium:'_4rutkr5j'};\nexport var margin = {'0':'_4rutkr2q','1':'_4rutkr2r','2':'_4rutkr2s','3':'_4rutkr2t','4':'_4rutkr2u','5':'_4rutkr2v','6':'_4rutkr2w','-1':'_4rutkr2x','-2':'_4rutkr2y','-3':'_4rutkr2z','-4':'_4rutkr30','-5':'_4rutkr31','-6':'_4rutkr32',auto:'_4rutkr33'};\nexport var margin0 = '_4rutkr4o';\nexport var marginBottom = {'0':'_4rutkr4a','1':'_4rutkr4b','2':'_4rutkr4c','3':'_4rutkr4d','4':'_4rutkr4e','5':'_4rutkr4f','6':'_4rutkr4g','-1':'_4rutkr4h','-2':'_4rutkr4i','-3':'_4rutkr4j','-4':'_4rutkr4k','-5':'_4rutkr4l','-6':'_4rutkr4m',auto:'_4rutkr4n'};\nexport var marginLeft = {'0':'_4rutkr34','1':'_4rutkr35','2':'_4rutkr36','3':'_4rutkr37','4':'_4rutkr38','5':'_4rutkr39','6':'_4rutkr3a','-1':'_4rutkr3b','-2':'_4rutkr3c','-3':'_4rutkr3d','-4':'_4rutkr3e','-5':'_4rutkr3f','-6':'_4rutkr3g',auto:'_4rutkr3h'};\nexport var marginRight = {'0':'_4rutkr3i','1':'_4rutkr3j','2':'_4rutkr3k','3':'_4rutkr3l','4':'_4rutkr3m','5':'_4rutkr3n','6':'_4rutkr3o','-1':'_4rutkr3p','-2':'_4rutkr3q','-3':'_4rutkr3r','-4':'_4rutkr3s','-5':'_4rutkr3t','-6':'_4rutkr3u',auto:'_4rutkr3v'};\nexport var marginTop = {'0':'_4rutkr3w','1':'_4rutkr3x','2':'_4rutkr3y','3':'_4rutkr3z','4':'_4rutkr40','5':'_4rutkr41','6':'_4rutkr42','-1':'_4rutkr43','-2':'_4rutkr44','-3':'_4rutkr45','-4':'_4rutkr46','-5':'_4rutkr47','-6':'_4rutkr48',auto:'_4rutkr49'};\nexport var marginY = {'0':'_4rutkr1r','1':'_4rutkr1s','2':'_4rutkr1t','3':'_4rutkr1u','4':'_4rutkr1v','5':'_4rutkr1w','6':'_4rutkr1x','-1':'_4rutkr1y','-2':'_4rutkr1z','-3':'_4rutkr20','-4':'_4rutkr21','-5':'_4rutkr22','-6':'_4rutkr23'};\nexport var media = {small:'screen and (min-width: 40em)',medium:'screen and (min-width: 52em)',large:'screen and (min-width: 64em)'};\nexport var navButtonlink = '_4rutkr56';\nexport var navlink = '_4rutkr55';\nexport var order = {'0':'_4rutkr2k','1':'_4rutkr2l','2':'_4rutkr2m','3':'_4rutkr2n'};\nexport var padding = {'0':'_4rutkr11','1':'_4rutkr12','2':'_4rutkr13','3':'_4rutkr14','4':'_4rutkr15','5':'_4rutkr16','6':'_4rutkr17','-1':'_4rutkr18','-2':'_4rutkr19','-3':'_4rutkr1a','-4':'_4rutkr1b','-5':'_4rutkr1c','-6':'_4rutkr1d'};\nexport var paddingY = {'0':'_4rutkr1e','1':'_4rutkr1f','2':'_4rutkr1g','3':'_4rutkr1h','4':'_4rutkr1i','5':'_4rutkr1j','6':'_4rutkr1k','-1':'_4rutkr1l','-2':'_4rutkr1m','-3':'_4rutkr1n','-4':'_4rutkr1o','-5':'_4rutkr1p','-6':'_4rutkr1q'};\nexport var radii = {button:'_4rutkr2h',large:'_4rutkr2i',circle:'_4rutkr2j'};\nexport var section = '_4rutkr2p';\nexport var text = {body:'_4rutkr4p _4rutkr4o',lead:'_4rutkr4q _4rutkr4o',superHeading:'_4rutkr4r _4rutkr4o',heading:'_4rutkr4s _4rutkr4o',subhead:'_4rutkr4t _4rutkr4o',subheadSmall:'_4rutkr4u _4rutkr4o',kicker:'_4rutkr4v _4rutkr4o',caps:'_4rutkr4w _4rutkr4o',stat:'_4rutkr4x _4rutkr4o',statLabel:'_4rutkr4y _4rutkr4o',small:'_4rutkr4z _4rutkr4o',medium:'_4rutkr50 _4rutkr4o',mega:'_4rutkr51 _4rutkr4o',center:'_4rutkr52',bold:'_4rutkr53'};\nexport var visuallyHidden = '_4rutkr5p';\nexport var widths = {full:'_4rutkru',half:'_4rutkrv',quarter:'_4rutkrw',third:'_4rutkrx',twothirds:'_4rutkry',fitContent:'_4rutkrz'};","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\n\n// Windows paths like `c:\\`\nconst WINDOWS_PATH_REGEX = /^[a-zA-Z]:\\\\/;\n\nexport default function isAbsoluteUrl(url) {\n\tif (typeof url !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof url}\\``);\n\t}\n\n\tif (WINDOWS_PATH_REGEX.test(url)) {\n\t\treturn false;\n\t}\n\n\treturn ABSOLUTE_URL_REGEX.test(url);\n}\n","import { Link as GatsbyLink } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport isAbsoluteURL from \"is-absolute-url\"\nimport * as React from \"react\"\nimport * as styles from \"./ui.css\"\n// import { MDXProvider } from \"@mdx-js/react\"\n\nexport const cx = (...args) => args.filter(Boolean).join(\" \")\n\nexport function Base({\n  as: Component = \"div\",\n  cx: _cx = [],\n  className,\n  ...props\n}) {\n  return <Component className={cx(..._cx, className)} {...props} />\n}\n\nexport function Container({ width = \"normal\", ...props }) {\n  return <Base cx={[styles.containers[width]]} {...props} />\n}\n\nexport function Flex({\n  variant,\n  gap = 3,\n  gutter,\n  wrap,\n  responsive,\n  marginY,\n  alignItems,\n  cx: _cx = [],\n  ...props\n}) {\n  return (\n    <Base\n      cx={[\n        styles.flex,\n        variant && styles.flexVariants[variant],\n        responsive && styles.flexVariants.responsive,\n        wrap && styles.flexVariants.wrap,\n        gutter && styles.gutter[gutter],\n        gutter ? styles.flexGap[0] : styles.flexGap[gap],\n        marginY && styles.marginY[marginY],\n        alignItems && styles.flexVariants[alignItems],\n        ..._cx,\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function Box({\n  width = \"full\",\n  background,\n  padding,\n  paddingY,\n  radius,\n  center = false,\n  order,\n  cx: _cx = [],\n  ...props\n}) {\n  return (\n    <Base\n      cx={[\n        styles.widths[width],\n        background && styles.backgrounds[background],\n        padding && styles.padding[padding],\n        paddingY && styles.paddingY[paddingY],\n        radius && styles.radii[radius],\n        center && styles.box.center,\n        order && styles.order[order],\n        ..._cx,\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function FlexList(props) {\n  return <Flex as=\"ul\" cx={[styles.list]} {...props} />\n}\n\nexport function List(props) {\n  return <Base as=\"ul\" cx={[styles.list]} {...props} />\n}\n\nexport function Space({ size = \"auto\", ...props }) {\n  return <Base cx={[styles.margin[size]]} {...props} />\n}\n\nexport function Nudge({ left, right, top, bottom, ...props }) {\n  return (\n    <Base\n      cx={[\n        left && styles.marginLeft[-left],\n        right && styles.marginRight[-right],\n        top && styles.marginTop[-top],\n        bottom && styles.marginBottom[-bottom],\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function Section(props) {\n  return <Box as=\"section\" className={styles.section} {...props} />\n}\n\nexport function Text({\n  variant = \"body\",\n  center = false,\n  bold = false,\n  ...props\n}) {\n  return (\n    <Base\n      cx={[\n        styles.text[variant],\n        center && styles.text.center,\n        bold && styles.text.bold,\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function SuperHeading({ ...props }) {\n  return <Text as=\"h1\" variant=\"superHeading\" {...props} />\n}\n\nexport function Heading({ ...props }) {\n  return <Text as=\"h2\" variant=\"heading\" {...props} />\n}\n\nexport function Subhead({ ...props }) {\n  return <Text as=\"h3\" variant=\"subhead\" {...props} />\n}\n\nexport function Kicker({ ...props }) {\n  return <Text variant=\"kicker\" {...props} />\n}\n\nexport function Link({ to, href, ...props }) {\n  const url = href || to || \"\"\n  if (isAbsoluteURL(url)) {\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a href={url} className={styles.link} {...props} />\n    )\n  }\n  return <GatsbyLink to={url} className={styles.link} {...props} />\n}\n\nexport function NavLink({ ...props }) {\n  return <Base as={Link} cx={[styles.navlink]} {...props} />\n}\n\nexport function NavButtonLink({ ...props }) {\n  return <Base as=\"button\" cx={[styles.navButtonlink]} {...props} />\n}\n\nexport function Button({ variant = \"primary\", ...props }) {\n  return <Base as={Link} cx={[styles.buttons[variant]]} {...props} />\n}\n\nexport function ButtonList({ links = [], reversed = false, ...props }) {\n  const getVariant = (i) => {\n    if (reversed) {\n      return i === 0 ? \"reversed\" : \"linkReversed\"\n    }\n    return i === 0 ? \"primary\" : \"reversed\"\n  }\n  return (\n    <FlexList marginY={4} {...props}>\n      {links &&\n        links.map((link, i) => (\n          <li key={link.id}>\n            <Button href={link.href} variant={getVariant(i)}>\n              {link.text}\n            </Button>\n          </li>\n        ))}\n    </FlexList>\n  )\n}\n\nexport function CTALink(props) {\n  return <Base as={Link} cx={[styles.ctaLink]} {...props} />\n}\n\nexport function LinkList({ links = [], ...props }) {\n  return (\n    <FlexList {...props}>\n      {links &&\n        links.map((link, i) => (\n          <li key={link.id}>\n            <CTALink href={link.href}>{link.text}</CTALink>\n          </li>\n        ))}\n    </FlexList>\n  )\n}\n\nexport function Blockquote(props) {\n  return <Base as=\"blockquote\" cx={[styles.blockquote]} {...props} />\n}\n\nexport function Avatar({ alt, image }) {\n  return (\n    <GatsbyImage alt={alt} image={getImage(image)} className={styles.avatar} />\n  )\n}\n\nexport function Logo({ alt, image, size = \"small\" }) {\n  return (\n    <GatsbyImage\n      alt={alt}\n      image={getImage(image)}\n      className={styles.logos[size]}\n    />\n  )\n}\n\nexport function Icon({ alt, image, size = \"medium\" }) {\n  return (\n    <GatsbyImage\n      alt={alt}\n      image={getImage(image)}\n      className={styles.icons[size]}\n    />\n  )\n}\n\nexport function IconLink(props) {\n  return <NavLink cx={[styles.iconLink]} {...props} />\n}\n\nexport function InteractiveIcon(props) {\n  return <Base as=\"button\" cx={[styles.interactiveIcon]} {...props} />\n}\n\nexport function VisuallyHidden(props) {\n  return <Base as=\"span\" cx={[styles.visuallyHidden]} {...props} />\n}\n\nexport function BlockLink(props) {\n  return <Link className={styles.blockLink} {...props} />\n}\n\n// export function CodeBlock({ children, ...props }) {\n//   return (\n//     <Box\n//       as=\"pre\"\n//       cx={[styles.codeBlock]} // Apply custom styles for the code block\n//       {...props}\n//     >\n//       {children}\n//     </Box>\n//   )\n// }\n\n// export function InlineCode({ children, ...props }) {\n//   return (\n//     <Box\n//       as=\"code\"\n//       cx={[styles.inlineCode]} // Apply custom styles for inline code\n//       {...props}\n//     >\n//       {children}\n//     </Box>\n//   )\n// }\n"],"names":["backgrounds","primary","muted","blockLink","box","center","buttons","reversed","link","linkReversed","containers","normal","wide","narrow","tight","fullbleed","flex","flexGap","flexVariants","wrap","start","baseline","columnStart","column","end","stretch","spaceBetween","responsive","gutter","iconLink","icons","small","medium","large","interactiveIcon","list","margin","auto","marginBottom","marginLeft","marginRight","marginTop","marginY","media","navButtonlink","navlink","order","padding","paddingY","radii","button","circle","section","text","body","lead","superHeading","heading","subhead","subheadSmall","kicker","caps","stat","statLabel","mega","bold","visuallyHidden","widths","full","half","quarter","third","twothirds","fitContent","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","e","t","a","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","z","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","G","children","u","V","B","U","srcSet","decoding","Y","sources","sizes","_ref6","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","ABSOLUTE_URL_REGEX","WINDOWS_PATH_REGEX","cx","args","Base","_ref","Component","_cx","props","React","Object","assign","_toConsumableArray","Container","_ref2","styles","Flex","_ref3","variant","gap","alignItems","Box","_ref4","background","radius","FlexList","Space","size","Nudge","Section","Text","Heading","_ref9","Subhead","_ref10","Kicker","_ref11","Link","_ref12","to","href","url","isAbsoluteURL","GatsbyLink","NavLink","_ref13","NavButtonLink","_ref14","Button","_ref15","ButtonList","_ref16","links","getVariant","id","Icon","_ref20","GatsbyImage","getImage","IconLink","InteractiveIcon","VisuallyHidden","BlockLink"],"sourceRoot":""}