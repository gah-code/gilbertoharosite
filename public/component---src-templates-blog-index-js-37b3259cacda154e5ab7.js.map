{"version":3,"file":"component---src-templates-blog-index-js-37b3259cacda154e5ab7.js","mappings":"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","sources":["webpack://gilbert-contentful-website/./src/components/head.js","webpack://gilbert-contentful-website/./src/components/layout/layout.js","webpack://gilbert-contentful-website/./src/components/blog/Card.js","webpack://gilbert-contentful-website/./src/templates/blog-index.js"],"sourcesContent":["import React from \"react\"\n\n// Utility function to remove trailing slashes\nexport const normalizeUrl = (url) => {\n  if (!url) return \"\"\n  return url.replace(/\\/$/, \"\") // Remove trailing slash\n}\n\nexport default function SEOHead({ title, description, image, url }) {\n  const cleanedUrl = normalizeUrl(url)\n  return (\n    <>\n      <meta charSet=\"utf-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <meta name=\"robots\" content=\"index, follow\" />\n\n      <title>{title}</title>\n      <meta name=\"description\" content={description || \"Default description\"} />\n\n      {cleanedUrl && <link rel=\"canonical\" href={cleanedUrl} />}\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:description\"\n        content={description || \"Default description\"}\n      />\n      <meta property=\"og:url\" content={cleanedUrl} />\n      {image && <meta property=\"og:image\" content={image.url} />}\n    </>\n  )\n}\n","import * as React from \"react\"\nimport \"../design-system/styles.css\"\nimport { Slice } from \"gatsby\"\n\nconst Layout = ({ children }) => {\n  console.log(\"Rendering Header Slice\")\n  console.log(\"Rendering Footer Slice\")\n\n  return (\n    <>\n      <Slice alias=\"header\" />\n      <main>{children}</main>\n      <Slice alias=\"footer\" />\n    </>\n  )\n}\n\nexport default Layout\n","// src/components/blog/Card.js\nimport React from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { BlockLink, Space, Subhead, Kicker, Text } from \"../ui/ui\"\n\nfunction Card({ children, to, style = {} }) {\n  return (\n    <BlockLink\n      to={to}\n      style={{\n        padding: \"10px\",\n        border: \"1px solid #eee\",\n        borderRadius: \"8px\",\n        width: \"350px\",\n        ...style,\n      }}\n    >\n      {children}\n    </BlockLink>\n  )\n}\n\nfunction CardImage({ image }) {\n  if (!image) return null\n  return (\n    <>\n      <GatsbyImage\n        alt={image.alt}\n        image={getImage(image)}\n        style={{\n          borderRadius: \"8px\",\n          height: \"200px\",\n          objectFit: \"cover\",\n        }}\n      />\n      <Space size={4} />\n    </>\n  )\n}\n\nfunction CardTitle({ category, title }) {\n  return (\n    <Subhead>\n      <Kicker>{category}</Kicker>\n      {title}\n    </Subhead>\n  )\n}\n\nfunction CardExcerpt({ excerpt }) {\n  return excerpt ? <Text as=\"p\">{excerpt}</Text> : null\n}\n\n/* \n  Attach child components as static properties on Card \n  so we can do <Card.Image />, <Card.Title />, etc.\n*/\nCard.Image = CardImage\nCard.Title = CardTitle\nCard.Excerpt = CardExcerpt\n\nexport default Card\n","// src/templates/blog-index.js\nimport * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout/layout\"\nimport SEOHead, { normalizeUrl } from \"../components/head\"\nimport { Container, Heading, Box, FlexList } from \"../components/ui/ui\"\n\n// Import the compound Card component\nimport Card from \"../components/blog/Card\"\n\nexport default function BlogIndex({ data }) {\n  // 1) All posts from Contentful\n  const posts = data.allContentfulBlogPost.nodes\n\n  // 2) Sort so \"Featured\" appear first\n  const sortedPosts = [...posts].sort((a, b) => {\n    if (a.category === \"Featured\" && b.category !== \"Featured\") return -1\n    if (a.category !== \"Featured\" && b.category === \"Featured\") return 1\n    return 0\n  })\n\n  return (\n    <Layout title=\"Blogs\">\n      <Container>\n        <article>\n          {/* ------- Category Filter Section ------- */}\n          <Box paddingY={4}>\n            {/* <h2\n            style={{ fontSize: \"1.5rem\", marginBottom: \"30px\", color: \"#333\" }}\n          >\n            Filter by Category:\n          </h2> */}\n            <ul\n              style={{\n                listStyle: \"none\",\n                padding: 0,\n                display: \"flex\",\n                gap: \"8px\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              {Array.from(new Set(posts.map((post) => post.category))).map(\n                (category) => (\n                  <li key={category} style={{ margin: 0 }}>\n                    <Link\n                      to={`/category/${category.toLowerCase()}/`}\n                      style={{\n                        padding: \"8px 12px\",\n                        backgroundColor: \"#333\",\n                        color: \"white\",\n                        borderRadius: \"5px\",\n                        textDecoration: \"none\",\n                      }}\n                    >\n                      {category}\n                    </Link>\n                  </li>\n                )\n              )}\n            </ul>\n          </Box>\n\n          {/* ------- Main Blog Listing ------- */}\n          <Box paddingY={4}>\n            <Heading as=\"h1\">Blogs</Heading>\n            <FlexList\n              responsive\n              wrap\n              gap={3}\n              gutter={3}\n              style={{ display: \"flex\", flexWrap: \"wrap\" }}\n              variant=\"start\"\n            >\n              {sortedPosts.map((post) => {\n                const isFeatured = post.category === \"Featured\"\n\n                return (\n                  <Box\n                    as=\"li\"\n                    key={post.id}\n                    padding={3}\n                    // You can vary the width for featured vs. regular posts\n                    width={isFeatured ? [\"full\", \"half\"] : [\"full\", \"third\"]}\n                  >\n                    <Card\n                      to={`/blogs/${post.slug}`}\n                      // Slight styling tweak for featured items\n                      // style={isFeatured ? { backgroundColor: \"#f9f9f9\" } : {}}\n                    >\n                      <Card.Image image={post.image} />\n                      <Card.Title category={post.category} title={post.title} />\n                      <Card.Excerpt excerpt={post.excerpt} />\n                    </Card>\n                  </Box>\n                )\n              })}\n            </FlexList>\n          </Box>\n        </article>\n      </Container>\n    </Layout>\n  )\n}\n\n// --- SEO HEAD ---\nexport const Head = ({ data }) => {\n  const { site } = data\n  const siteMetadata = site.siteMetadata\n\n  const title = `All My Blog Posts | ${siteMetadata.title}`\n  const description = `Discover the my blog posts on various topics, including web development and design articles. Stay updated with fresh content.`\n  const url = normalizeUrl(`${siteMetadata.siteUrl}/blogs`)\n\n  return <SEOHead title={title} description={description} url={url} />\n}\n\n// --- GraphQL Query ---\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n        description\n        title\n      }\n    }\n    allContentfulBlogPost(sort: { fields: date, order: DESC }) {\n      nodes {\n        id\n        slug\n        title\n        category\n        excerpt\n        image {\n          id\n          alt\n          gatsbyImageData(\n            placeholder: TRACED_SVG\n            width: 300\n            height: 200\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n  }\n`\n"],"names":["normalizeUrl","url","replace","SEOHead","_ref","title","description","image","cleanedUrl","React","charSet","name","content","rel","href","property","children","console","log","Slice","alias","Card","to","style","BlockLink","padding","border","borderRadius","width","Image","_ref2","GatsbyImage","alt","getImage","height","objectFit","Space","size","Title","_ref3","category","Subhead","Kicker","Excerpt","_ref4","excerpt","Text","as","BlogIndex","data","posts","allContentfulBlogPost","nodes","sortedPosts","_toConsumableArray","sort","a","b","Layout","Container","Box","paddingY","listStyle","display","gap","flexWrap","Array","from","Set","map","post","key","margin","Link","toLowerCase","backgroundColor","color","textDecoration","Heading","FlexList","responsive","wrap","gutter","variant","isFeatured","id","slug","Head","site","siteMetadata","siteUrl"],"sourceRoot":""}